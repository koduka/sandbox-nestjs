version: '3'

services:
  api:
    image: node:14.7
    ports:
      - '${API_PORT}:${API_PORT}'
    volumes:
      - .:/app
    working_dir: /app
    command: 'npm run start:dev'
    restart: unless-stopped
    depends_on:
      - db
      - redis
      - localstack
    networks:
      default:
  worker:
    image: node:14.7
    volumes:
      - .:/app
    working_dir: /app
    command: 'npm run start:worker:dev'
    restart: unless-stopped
    depends_on:
      - db
      - redis
      - localstack
    networks:
      default:
  node:
    image: node:14.7
    ports:
      - '9229:9229'
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      - db
      - redis
      - localstack
    networks:
      default:
  db:
    image: postgres:13.3
    ports:
      - '${POSTGRES_PORT}:5432'
    environment:
      TZ: ${TZ}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: unless-stopped
    volumes:
      - db:/var/lib/postgres/data
    networks:
      default:
  redis:
    image: redis:6.2.3
    ports:
      - '${REDIS_PORT}:6379'
    restart: unless-stopped
    volumes:
      - redis:/data
    networks: 
      default:
  localstack:
    image: localstack/localstack:0.12.11
    ports:
      - '4566:4566'
    environment:
      SERVICES: 's3,sqs'
      HOSTNAME: ${AWS_HOST}
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      DEBUG: 1
    restart: unless-stopped
    networks: 
      default:
  aws-cli:
    image: amazon/aws-cli:2.2.9
    entrypoint: aws --endpoint-url=${AWS_ENDPOINT}
    environment:
      AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
    networks: 
      default:
  terraform:
    build:
      context: ./docker/terraform/
    command: bash -c "terraform init && terraform apply --auto-approve"
    volumes:
      - ./terraform/sqs.tf:/terraform/sqs.tf
      - ./terraform/variables.tf:/terraform/variables.tf
    tty: true
    depends_on:
      - localstack
    networks: 
      default:

volumes:
  db:
  redis:

networks:
  default:
